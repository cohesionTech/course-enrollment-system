<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/External/**" location="/WEB-INF/External/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url"
			value="jdbc:mysql://localhost:3306/student_registration" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="" />
	</beans:bean>

	<!-- Hibernate 4 SessionFactory Bean definition -->
	<beans:bean id="hibernate4AnnotatedSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>com.hardik.spring.model.Term</beans:value>
				<beans:value>com.hardik.spring.model.Department</beans:value>
				<beans:value>com.hardik.spring.model.Course</beans:value>
				<beans:value>com.hardik.spring.model.Location</beans:value>
				<beans:value>com.hardik.spring.model.Student</beans:value>
				<beans:value>com.hardik.spring.model.Teacher</beans:value>
				<beans:value>com.hardik.spring.model.TeacherMap</beans:value>
				<beans:value>com.hardik.spring.model.User</beans:value>
				<beans:value>com.hardik.spring.model.Enrollment</beans:value>
				<beans:value>com.hardik.spring.model.TimeSlot</beans:value>
				<beans:value>com.hardik.spring.model.Grade</beans:value>
			
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
				</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
				<!-- <beans:prop key="hibernate.hbm2ddl.auto">create</beans:prop> -->
				<beans:prop key="hibernate.format_sql">${hibernate.format_sql}</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	<!-- Term -->
	<beans:bean id="termDAO" class="com.hardik.spring.dao.TermDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="termService" class="com.hardik.spring.service.TermServiceImpl">
		<beans:property name="termDAO" ref="termDAO"></beans:property>
	</beans:bean>
	
	<!-- Department -->
	<beans:bean id="departmentDAO" class="com.hardik.spring.dao.DepartmentDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="departmentService" class="com.hardik.spring.service.DepartmentServiceImpl">
		<beans:property name="departmentDAO" ref="departmentDAO"></beans:property>
	</beans:bean>
	
	<!-- Course -->
	<beans:bean id="courseDAO" class="com.hardik.spring.dao.CourseDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="courseService" class="com.hardik.spring.service.CourseServiceImpl">
		<beans:property name="courseDAO" ref="courseDAO"></beans:property>
	</beans:bean>
	
	<!-- Location -->
	<beans:bean id="locationDAO" class="com.hardik.spring.dao.LocationDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="locationService" class="com.hardik.spring.service.LocationServiceImpl">
		<beans:property name="locationDAO" ref="locationDAO"></beans:property>
	</beans:bean>
	
	<!-- Student -->
	<beans:bean id="studentDAO" class="com.hardik.spring.dao.StudentDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="studentService" class="com.hardik.spring.service.StudentServiceImpl">
		<beans:property name="studentDAO" ref="studentDAO"></beans:property>
	</beans:bean>
	
	
	<beans:bean id="teacherDAO" class="com.hardik.spring.dao.TeacherDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="teacherService" class="com.hardik.spring.service.TeacherServiceImpl">
		<beans:property name="teacherDAO" ref="teacherDAO"></beans:property>
	</beans:bean>
	
	
	<beans:bean id="teacherMapDAO" class="com.hardik.spring.dao.TeacherMapDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="teacherMapService" class="com.hardik.spring.service.TeacherMapServiceImpl">
		<beans:property name="teacherMapDAO" ref="teacherMapDAO"></beans:property>
	</beans:bean>
	
	<beans:bean id="userDAO" class="com.hardik.spring.dao.UserDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="userService" class="com.hardik.spring.service.UserServiceImpl">
		<beans:property name="userDAO" ref="userDAO"></beans:property>
	</beans:bean>
	
	<beans:bean id="enrollmentDAO" class="com.hardik.spring.dao.EnrollmentDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="enrollmentService" class="com.hardik.spring.service.EnrollmentServiceImpl">
		<beans:property name="enrollmentDAO" ref="enrollmentDAO"></beans:property>
	</beans:bean>
	
	<beans:bean id="timeSlotDAO" class="com.hardik.spring.dao.TimeSlotDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="timeSlotService" class="com.hardik.spring.service.TimeSlotServiceImpl">
		<beans:property name="timeSlotDAO" ref="timeSlotDAO"></beans:property>
	</beans:bean>
	
	<beans:bean id="gradeDAO" class="com.hardik.spring.dao.GradeDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="gradeService" class="com.hardik.spring.service.GradeServiceImpl">
		<beans:property name="gradeDAO" ref="gradeDAO"></beans:property>
	</beans:bean>
	
	<context:component-scan base-package="com.hardik.spring" />
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>

</beans:beans>